[
	{
		"name": "FaceFusion",
		"code": "https://mayanktamakuwala-facefusion.hf.space",
		"line1": "Developed FaceFusion, an innovative FaceSwap app allowing users to merge faces from two input images seamlessly with <b>95% accuracy</b>.",
		"line2": "Implemented Insightface's <b>\"buffalo_l\"</b> model for precise face detection and analysis, while leveraging the <b>\"inswapper_128.onnx\"</b> model to ensure a high-quality fusion with accurate color matching and blending.",
		"line3": "Utilized <b>Gradio UI</b>, providing a user-friendly experience, and deployed the application on HuggingFace Spaces. The swapping mechanism, operating as an API on an <b>AWS EC2 Ubuntu instance</b>, boosts a response time by <b>100 ms</b>, showcasing the efficiency of the solution.",
		"duration": "November 2023 - January 2024",
		"summary": "A Facial Recognition Application Utilizing Artificial Intelligence",
		"what": "I developed the Face Fusion application over Thanksgiving break to allows users to merge faces from two input images with 95% accuracy.",
		"how": "I Implemented Insightface's \"buffalo_l\" model for precise face detection and analysis, while leveraging the \"inswapper_128.onnx\" model to ensure a high-quality fusion with accurate color matching and blending. Additionally, I utilized Gradio UI, providing a user-friendly experience, and deployed the application on HuggingFace Spaces. The swapping mechanism, operating as an API on an AWS EC2 Ubuntu instance, boosts a response time by 100 ms, showcasing the efficiency of the solution.",
		"technology": [
			"HuggingFace",
			"Gradio UI",
			"InsightFace",
			"Pillow",
			"OpenCV"
		],
		"prog_lang": ["Python"],
		"tags": [
			"Artificial Intelligence",
			"Machine Learning",
			"Facial-Recognition"
		]
	},
	{
		"name": "Vision Search Engine",
		"code": "https://github.com/MayankTamakuwala/Vision_Search_Engine",
		"line1": "Developed Vision Search Engine, a sophisticated search engine designed to provide highly accurate and efficient search capabilities.",
		"line2": "Implemented advanced algorithms for tokenization, normalization, boolean retrieval, ranked retrieval, and positional indexing, supporting large datasets through Variable-Byte Encoding and On-disk Indexing.",
		"line3": "Incorporated text processing techniques like stemming, lemmatization, and stopword removal, and featured real-time indexing and multi-threaded query processing for robust performance.",
		"duration": "October 2023 - December 2023",
		"summary": "A Versatile and Accurate Search Engine",
		"what": "Developed a search engine equipped to handle a wide array of search functionalities, ensuring precise and relevant results through advanced algorithms and techniques.",
		"how": "Implemented tokenization, normalization, boolean and ranked retrieval, positional indexing, and supported large datasets with Variable-Byte Encoding and On-disk Indexing. Utilized text processing techniques like stemming, lemmatization, and stopword removal, supporting real-time indexing and multi-threaded query processing.",
		"technology": [
			"Python",
			"Variable-Byte Encoding",
			"On-disk Indexing",
			"Stemming",
			"Lemmatization"
		],
		"prog_lang": ["Python"],
		"tags": ["Search Engine", "Information Retrieval", "Text Processing", "Machine Learning"]
	},
	{
		"name": "Mock'EM",
		"code": "https://apple.co/3DyVZvO",
		"line1": "Developed and co-created Mock’EM, an innovative iMessage extension app enabling users to transform their voice or text into captivating deep fake voices and send hilarious and engaging messages to friends through iMessage.",
		"line2": "Employed <b>SwiftUI</b> to design the frontend and integrated <b>Swift</b> along with the <b>FakeYou API</b> for the backend, resulting in a seamless and user-friendly application that offers fantastic deepfake generation capabilities.",
		"line3": "Collaborated with one other person to develop the application within the projected <b>2-month timeline</b>, leading to a successful launch and achieving an impressive ranking of <b>#68</b> in the App Store’s Entertainment category.",
		"duration": "May 2023 - July 2023",
		"summary": "An iPhone Text Messaging Application to Transform your Voice",
		"what": "Developed and co-created Mock’EM, an innovative iMessage extension app (which ranked #68 in the App Store under Entertainment ) enables users to transform their voice or text into captivating deep fake voices of their favorite character or celebrity and send hilarious and engaging messages to friends through iMessage.",
		"how": "Employed SwiftUI to design the frontend and integrated Swift along with the FakeYou API for the backend, resulting in a seamless and user-friendly application that offers fantastic deepfake generation capabilities.",
		"technology": ["Swift UI", "REST API"],
		"prog_lang": ["Swift"],
		"tags": [
			"Artificial Intelligence",
			"iOS Development",
			"Natural Language Processing",
			"Text-to-Speech",
			"Speech-to-Text"
		]
	},
	{
		"name": "CheaperEater",
		"code": "https://youtu.be/6FJXU9ALyEM",
		"line1": "Created a comprehensive price comparison app for popular food delivery services, such as GrubHub, DoorDash, UberEats, and Postmates.",
		"line2": "Utilized <b>React Native</b> with <b>tailwind-rn</b> for the frontend and <b>Express JS</b> for the backend to deliver a seamless and user-friendly application.",
		"line3": "Implemented <b>reverse engineering</b> techniques to clone and retrieve data from the targeted food delivery service APIs, ensuring accurate and real-time pricing comparisons.",
		"duration": "August 2022 - May 2023",
		"summary": "A Food Delivery Aggregator & Price Comparison Application",
		"what": "Despite not being able to access any API or public data, I created a comprehensive price comparison app for popular food delivery services, such as GrubHub, DoorDash, UberEats, and Postmates to help consumers save when ordering their favorite food items.",
		"how": "I utilized React Native with tailwind-rn for the frontend and Express JS for the backend to deliver a seamless and user-friendly application. I applied reverse engineering techniques to clone and retrieve data from the targeted food delivery service APIs which do not exist publicly, ensuring accurate and real-time pricing comparisons forcing these companies to realize and patch their data vulnerabilities.",
		"technology": ["Tailwind-RN", "Express JS", "React Native"],
		"prog_lang": ["Node JS", "JavaScript"],
		"tags": ["Reverse Engineering", "REST API", "API Cloning"]
	},
	{
		"name": "WordDangler",
		"code": "",
		"line1": "Contributed to the development of WordDangler, a multiplayer hangman game with real-time messaging, using modern web technologies like <b>ReactJS, DaisyUI,</b> and <b>Tailwind CSS</b> for the frontend, and <b>Express JS</b> and <b>Socket.io</b> for the backend.",
		"line2": "Collaborated with a team of developers to achieve shared goals and effectively implemented features such as lobby system, real-time messaging, and game mechanics.",
		"line3": "Demonstrated a deep understanding of modern web development principles and practices, including agile development methodologies, testing and debugging, and continuous integration and deployment.",
		"duration": "January 2023 - May 2023",
		"summary": "A Multiplayer Game with Integrated Real Time Messaging System",
		"what": "Collaborated with a team of developers to develop a multiplayer hangman game with real-time messaging and a lobby system.",
		"how": "Via agile development and using modern web technologies like ReactJS, DaisyUI, and Tailwind CSS for the frontend, and Express JS and Socket.io for the backend.",
		"technology": ["Socket.IO", "Daisy UI", "Tailwind CSS", "React JS"],
		"prog_lang": ["Node JS", "JavaScript"],
		"tags": ["Web Socket", "Real-Time Messaging"]
	},
	{
		"name": "Automobile Price Predictor",
		"code": "https://github.com/MayankTamakuwala/Automobile-Price-Prediction",
		"line1": "Implemented prediction system for Automobile Prices using various machine learning models such as Linear Regression, Gradient Boosting Regressor, Support Vector Regressor, Decision Tree Regressor, and Random Forest Regressor with different normalization methods such as PCA and K-fold validation.",
		"line2": "Performed comparison and analysis to gain insights on metrics like accuracy, F1 score, and confusion matrix using Statistics and Regression Analysis and utilizing concepts like Principal Component Analysis and Linear Discriminant Analysis.",
		"duration": "March 2023 - May 2023",
		"summary": "A Machine Learning Powered Automobile Price Predictor",
		"what": "Developed a price prediction application for automobiles leveraging various machine learning models such as Linear Regression, Gradient Boosting Regressor, Support Vector Regressor, Decision Tree Regressor, and Random Forest Regressor with different normalization methods such as PCA and K-fold validation.",
		"how": "Performed comparison and analysis to gain insights on metrics like accuracy, F1 score, and confusion matrix using Statistics and Regression Analysis and utilizing concepts like Principal Component Analysis and Linear Discriminant Analysis.",
		"technology": ["SciKit-Learn"],
		"prog_lang": ["Python"],
		"tags": [
			"Machine Learning",
			"K-fold Validation",
			"Confusion Matrix",
			"Principal Component Analysis"
		]
	},
	{
		"name": "BeachMuse",
		"code": "",
		"line1": "Designed a website for the <b>2023 BeachHacks hackathon</b> that can help a large crowd collaborate and explore new songs in the music world by adding their choice of songs into a single collaborative queue.",
		"line2": "Built reusable front-end components such as Now Playing, Navigation Bar, Queue system, and Search functionality using <b>JavaScript, ReactJS, ExpressJS, MaterialUI,</b> and various available <b>Spotify APIs.</b>",
		"line3": "Collaborated with a team of 7 members for the development of this application within the projected time of 4 months.",
		"duration": "November 2022 - February 2023",
		"summary": "A Virtual Juke Box Application",
		"what": "Collaborated on a team of 7 members to design a music application for the 2023 BeachHacks hackathon that can help entertain large crowds by allowing users to add their choice of songs into a single collaborative queue.",
		"how": "Built reusable front-end components such as Now Playing, Navigation Bar, Queue system, and Search functionality using JavaScript, ReactJS, ExpressJS, MaterialUI, and various available Spotify APIs.",
		"technology": [
			"React JS",
			"Express JS",
			"Material UI",
			"Spotify API",
			"Tailwind CSS"
		],
		"prog_lang": ["Node JS", "JavaScript"],
		"tags": ["Web Socket", "REST API", "Spotify API"]
	},
	{
		"name": "EazMeet",
		"code": "https://youtu.be/Qb_buINtQ0I",
		"line1": "Developed a mobile application that finds feasible meeting places between two locations using the user’s input location and the user’s present location.",
		"line2": "Provides the user with the top ten possible locations and has options for choosing from the available filters as well, giving the user the freedom to choose the kind of location they want.",
		"line3": "Applied front-end components of the amazing user experience for <b>Android</b> and <b>iOS</b> were built using the <b>React-Native</b> framework, and <b>TomTom’s Search and Places API</b> was used to get the reviews and photographs of the locations.",
		"duration": "July 2021 - June 2022",
		"summary": "A Meeting Place Finder Application",
		"what": " Developed a mobile application that finds feasible meeting places between two locations using the user’s input location and the user’s present location. Ultimately,  providing the user with the top ten possible locations along with options to filter the options based on the user’s preferences.",
		"how": "Front-end components for Android and iOS were built using the React-Native framework, and TomTom’s Search and Places API were used to get the reviews and photographs of the locations.",
		"technology": ["React Native", "TomTom Maps API"],
		"prog_lang": ["Node JS", "JavaScript"],
		"tags": ["REST API", "React Native Maps"]
	}
]